openapi: 3.0.3
info:
  title: Price Service API
  description: "This is a small project that manages prices.
  
  [The Price Service repository](https://github.com/ddonamaria/price-service)"
  contact:
    email: daviddonamaria@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:8080/
tags:
  - name: price
    description: Find price details
paths:
  /price:
    get:
      tags:
        - price
      summary: "Find prices by applicationDate, productId or brandId"
      operationId: findPriceByParams
      parameters:
        - name: applicationDate
          in: query
          required: false
          description: "Application date in format YYYY-MM-DD'T'HH:mm:ss"
          schema:
            type: string
            format: datetime
            example: "2025-01-01T00:00:00"
        - name: productId
          in: query
          required: false
          description: "Id of product associated"
          schema:
            type: integer
            format: int64
            example: 35455
        - name: brandId
          in: query
          required: false
          description: "Id of brand associated"
          schema:
            type: integer
            format: int32
            example: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceDTO'
        "400":
          description: "Invalid input parameters"
        "404":
          description: "No price found for the specified parameters"
components:
  schemas:
    PriceDTO:
      type: object
      properties:
        productId:
          type: integer
          format: int64
          example: 35455
        brandId:
          type: integer
          example: 1
        priceId:
          type: integer
          example: 2
        startDate:
          type: string
          format: datetime
          example: "2025-01-01T00:00:00"
        endDate:
          type: string
          format: datetime
          example: "2025-12-31T23:59:59"
        price:
          type: number
          format: double
          example: 25.45
        currency:
          type: string
          enum:
            - EUR
            - USD
            - GBP
          example: "EUR"
